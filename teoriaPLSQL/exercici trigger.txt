--- CREAR TAULA ON GUARDAR LES DADES QUAN UN TREBALLADOR CANVIA DE SOU

CREATE TABLE "ADMIN"."SALARY_HISTORY" 
   (	"SALARY_HIST_ID" NUMBER(6,0) NOT NULL ENABLE, 	
	"EMPLOYEE_ID" NUMBER(6,0) NOT NULL ENABLE, 
	"SALARY" NUMBER(8,2), 
	"DEPARTMENT_ID" NUMBER(4,0), 
	"END_DATE" DATE NOT NULL ENABLE, 
	 CONSTRAINT "SHIST_EMP_FK" FOREIGN KEY ("EMPLOYEE_ID")
	  REFERENCES "ADMIN"."EMPLOYEES" ("EMPLOYEE_ID") ENABLE, 
	 CONSTRAINT "SHIST_DEPT_FK" FOREIGN KEY ("DEPARTMENT_ID")
	  REFERENCES "ADMIN"."DEPARTMENTS" ("DEPARTMENT_ID") ENABLE
   ) ;


CREATE UNIQUE INDEX "ADMIN"."SALARY_HIST_PK" ON "ADMIN"."SALARY_HISTORY" ("SALARY_HIST_ID");

ALTER TABLE "ADMIN"."SALARY_HISTORY" ADD CONSTRAINT "SALARY_HIST_PK" PRIMARY KEY ("SALARY_HIST_ID")
  USING INDEX "ADMIN"."SALARY_HIST_PK"  ENABLE;

CREATE SEQUENCE  "ADMIN"."SALARY_HIST_SEQ"  MINVALUE 1 MAXVALUE 999999 INCREMENT BY 1 START WITH 1;

--- CREAR TRIGGER PER GUARDAR LES DADES QUAN UN TREBALLADOR CANVIA DE SOU

create or replace TRIGGER salary_audit_trg
    AFTER 
    UPDATE OR DELETE 
    ON employees
    FOR EACH ROW    
DECLARE
   l_action VARCHAR2(10):='NO_UPDATE';
BEGIN
   -- determine the action type
   l_action := CASE  
         WHEN UPDATING AND :old.SALARY!=:new.salary THEN 'UPDATE'
         WHEN DELETING THEN 'UPDATE'
   END;

   -- insert a row into the audit table   
   -- only if action is update
   if l_action='UPDATE' then
   	insert into SALARY_HISTORY
        (SALARY_HIST_ID, EMPLOYEE_ID, SALARY, DEPARTMENT_ID, END_DATE)
	VALUES
        (SALARY_HIST_SEQ.NEXTVAL, :old.EMPLOYEE_ID, :old.SALARY, :old.DEPARTMENT_ID, sysdate);
        null;
   end if;
END;
