/* Pràctica 2. CustProd */
/* Denis Fernández i Adrià Martínez */
use custprod;

/* 1-clients en paisos diferents al pais de la oficina    
 	client (numero, nom, ciutat, pais) oficina (ciutat, pais). 40 FILES*/
SELECT c.*
FROM customers c
JOIN offices o ON c.city = o.city AND c.country != o.country;


/* 2-quants sales rep hi ha a cada oficina   
 	oficina (codi oficina, ciutat, pais), sales rep (total sales rep). 7 FILES*/
SELECT o.officeCode, o.city, o.country, COUNT(e.employeeNumber) AS totalSalesRep
FROM offices o
JOIN employees e ON o.officeCode = e.officeCode AND e.jobTitle = 'Sales Rep'
GROUP BY o.officeCode, o.city, o.country;


/* 3-comptar quants treballadors hi ha a cada oficina  
 	oficina (codi oficina, ciutat, pais), treballadors (total treballadors, total sales rep, total altres). 7 FILES*/
SELECT o.officeCode, o.city, o.country,
       COUNT(e.employeeNumber) AS totalEmployees,
       COUNT(CASE WHEN e.jobTitle = 'Sales Rep' THEN 1 END) AS totalSalesRep,
       COUNT(CASE WHEN e.jobTitle != 'Sales Rep' THEN 1 END) AS totalOthers
FROM offices o
LEFT JOIN employees e ON o.officeCode = e.officeCode
GROUP BY o.officeCode, o.city, o.country;


/* 4-comptar quants clients té i quants paisos tracta cada sales rep
 	sales rep (codi oficina, ciutat, pais, nom i cognom), clients (total clients, total paisos diferents dels clients).15 FILES*/
SELECT e.employeeNumber, e.firstName, e.lastName,
       COUNT(c.customerNumber) AS totalClients,
       COUNT(DISTINCT c.country) AS totalCountries
FROM employees e
LEFT JOIN customers c ON e.employeeNumber = c.salesRepEmployeeNumber
LEFT JOIN offices o ON e.officeCode = o.officeCode 
GROUP BY e.employeeNumber, e.firstName, e.lastName, o.city, o.country;


/* 5-Ingressos anuals per cada producte, ordenar de mes a menys ingressos
 	producte (numero), Ingressos (any, total comandes, total ingressos). 327 FILES*/
SELECT p.productCode, 
       YEAR(o.orderDate) AS year,
       COUNT(o.orderNumber) AS totalOrders,
       SUM(od.priceEach * od.quantityOrdered) AS totalRevenue
FROM products p
JOIN orderdetails od ON p.productCode = od.productCode
JOIN orders o ON od.orderNumber = o.orderNumber
GROUP BY p.productCode, year
ORDER BY totalRevenue DESC;


/* 6-Clients, comandes, i cost del producte dels clients que han comprat productes de la linia 'Vintage cars'
 	Clients (numero), comandes (data), i cost (quantitat, preu unitari, total). 657 FILES*/
SELECT c.customerNumber, c.customerName, o.orderNumber, o.orderDate,
       od.quantityOrdered, od.priceEach, (od.quantityOrdered * od.priceEach) AS totalCost
FROM customers c
JOIN orders o ON c.customerNumber = o.customerNumber
JOIN orderdetails od ON o.orderNumber = od.orderNumber
JOIN products p ON od.productCode = p.productCode
WHERE p.productLine = 'Vintage Cars';


/* 7-Deute dels clients, sumar els cost de les comandes que no tenen status ('Cancelled','On Hold')
 	Clients (numero), deute (suma del cost de les comandes). 98 FILES*/
SELECT c.customerNumber, SUM(od.quantityOrdered * od.priceEach) AS totalDebt
FROM customers c
JOIN orders o ON c.customerNumber = o.customerNumber
JOIN orderdetails od ON o.orderNumber = od.orderNumber
WHERE o.status NOT IN ('Cancelled', 'On Hold')
GROUP BY c.customerNumber;


/* 8-Pagaments dels clients,
 	Clients (numero), pagaments (suma de les quantitats pagades). 98 FILES*/

SELECT c.customerNumber AS numero_client, SUM(p.amount) AS suma_pagaments
FROM customers c
INNER JOIN payments p ON c.customerNumber = p.customerNumber
GROUP BY c.customerNumber;

/* 9-Clients morosos, que no han pagat tot el seu deute, només s'han de tenir en compte les comandes que no estan ('Cancelled' o 'On Hold')
 	Clients (numero), deute (suma del cost de les comandes) > pagaments (suma de les quantitats pagades). 13 FILES*/

SELECT deutes.customerNumber, deutes.deute, pagaments.totalPagat
FROM
    (SELECT c.customerNumber, 
            sum(od.quantityOrdered*od.priceEach) as deute       
    FROM customers c join orders o on c.customerNumber = o.customerNumber
                    join orderdetails od on o.orderNumber=od.orderNumber
    WHERE o.status NOT IN ('Cancelled','On Hold')
    GROUP BY c.customerNumber) as deutes
LEFT JOIN
    (SELECT c.customerNumber, 
            sum(p.amount) as totalPagat       
    FROM customers c join payments p on c.customerNumber = p.customerNumber
    GROUP BY c.customerNumber) as pagaments
ON deutes.customerNumber = pagaments.customerNumber
WHERE deutes.deute > ifnull(pagaments.totalPagat,0);

/* 10 - Venedor amb comandes 'On hold' o 'Cancelled' i els seus productes
    	venedor (codi, nom i congom) client (nom) comandes (número, data, status i comentaris) productes (quantitat demanada, nom i línia)
    	ordenat per cognom i nom del venedor . 123 FILES*/
SELECT e.employeeNumber, e.firstName, e.lastName, 
       c.customerName,
       o.orderNumber, o.orderDate, o.status, o.comments,
       d.quantityOrdered,
       p.productName, p.productLine
    FROM employees e JOIN customers c ON e.employeeNumber = c.salesRepEmployeeNumber
                     LEFT JOIN orders o ON c.customerNumber = o.customerNumber
                     LEFT JOIN orderdetails d ON o.orderNumber = d.orderNumber
                     LEFT JOIN products p ON p.productCode = d.productCode
    WHERE o.status IN ('On Hold', 'Cancelled');

/* 11 - Els venedors amb comandes 'On hold' o 'Cancelled'
    	Venedor (codi, nom i congom) sense repetits. 7 FILES*/
SELECT DISTINCT e.employeeNumber, e.firstName, e.lastName
    FROM employees e JOIN customers c ON e.employeeNumber = c.salesRepEmployeeNumber
        LEFT JOIN orders o ON c.customerNumber = o.customerNumber
    WHERE o.status IN ('On Hold', 'Cancelled');

/* 12 - Clients de l'oficina de Boston
    	Client (número, nom i ciutat) sense repetits. 12 FILES*/

SELECT DISTINCT c.customerNumber, c.customerName, c.city
    FROM employees e JOIN customers c ON e.employeeNumber = c.salesRepEmployeeNumber
        LEFT JOIN offices o on e.officeCode = o.officeCode
    WHERE o.city = "Boston";
/* 13 - Ingressos dels clients de l'oficina de Boston, nomes comandes que no no estan ('Cancelled' o 'On Hold')
    	el resultat ha de ser '841731.77'*/
select sum(d.quantityOrdered*d.priceEach)
from customers c join orders o on o.customerNumber = c.customerNumber
                join orderdetails d on o.orderNumber = d.orderNumber
                join employees e on c.salesRepEmployeeNumber = e.employeeNumber
                join offices on e.officeCode = offices.officeCode
where (o.status not in ("Cancelled","On Hold")) 
      and offices.city = "Boston";






